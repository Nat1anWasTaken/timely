definitions:
  calendar.ImportCalendarRequest:
    properties:
      calendar_id:
        type: string
    required:
    - calendar_id
    type: object
  calendar.ImportCalendarResponse:
    properties:
      calendar:
        $ref: '#/definitions/model.Calendar'
      message:
        type: string
      success:
        type: boolean
    type: object
  model.Account:
    description: OAuth account information
    properties:
      created_at:
        type: string
      email:
        description: e.g. example@gmail.com
        type: string
      expiry:
        description: Access token expiry
        type: string
      id:
        example: "0"
        type: string
      provider:
        description: e.g. "google", "github"
        type: string
      provider_id:
        description: e.g. Google sub, GitHub ID
        type: string
      updated_at:
        type: string
      user_id:
        example: "0"
        type: string
    type: object
  model.AuthResponse:
    description: Successful authentication response
    properties:
      message:
        description: Response message
        example: Login successful
        type: string
      success:
        description: Indicates if the operation was successful
        example: true
        type: boolean
      token:
        description: JWT authentication token
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user:
        allOf:
        - $ref: '#/definitions/model.User'
        description: User information
    type: object
  model.Calendar:
    description: Calendar
    properties:
      created_at:
        type: string
      description:
        type: string
      event_color:
        type: string
      event_nickname:
        type: string
      id:
        example: "0"
        type: string
      source:
        $ref: '#/definitions/model.CalendarSource'
      source_id:
        type: string
      summary:
        type: string
      synced_at:
        type: string
      time_zone:
        type: string
      updated_at:
        type: string
      user_id:
        example: "0"
        type: string
      visibility:
        $ref: '#/definitions/model.CalendarVisibility'
    type: object
  model.CalendarEvent:
    description: Calendar event
    properties:
      allDay:
        description: True if it's an all-day event
        type: boolean
      calendar_id:
        description: calendar ID
        example: "0"
        type: string
      created_at:
        type: string
      description:
        description: Optional description
        type: string
      end:
        description: ISO8601 datetime or date
        type: string
      event_color:
        description: Optional display color
        type: string
      id:
        description: Google Event ID
        example: "0"
        type: string
      location:
        description: Optional event location
        type: string
      source_id:
        description: Source calendar ID
        type: string
      start:
        description: ISO8601 datetime or date (for all-day)
        type: string
      title:
        description: Event title (summary)
        type: string
      updated_at:
        type: string
      visibility:
        allOf:
        - $ref: '#/definitions/model.CalendarEventVisibility'
        description: public / private / default
    type: object
  model.CalendarEventVisibility:
    enum:
    - public
    - private
    - inherited
    type: string
    x-enum-varnames:
    - CalendarEventVisibilityPublic
    - CalendarEventVisibilityPrivate
    - CalendarEventVisibilityInherited
  model.CalendarEventsResponse:
    description: Calendar events response
    properties:
      calendars:
        items:
          $ref: '#/definitions/model.CalendarWithEvents'
        type: array
      message:
        example: Calendar events retrieved successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  model.CalendarListResponse:
    description: Calendar list response
    properties:
      calendars:
        items:
          $ref: '#/definitions/model.GoogleCalendar'
        type: array
      message:
        example: Calendars retrieved successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  model.CalendarSource:
    enum:
    - google
    - isc
    type: string
    x-enum-varnames:
    - SourceGoogle
    - SourceISC
  model.CalendarVisibility:
    enum:
    - public
    - private
    type: string
    x-enum-varnames:
    - CalendarVisibilityPublic
    - CalendarVisibilityPrivate
  model.CalendarWithEvents:
    description: Calendar with events
    properties:
      created_at:
        type: string
      description:
        type: string
      event_color:
        type: string
      event_nickname:
        type: string
      events:
        items:
          $ref: '#/definitions/model.CalendarEvent'
        type: array
      id:
        example: "0"
        type: string
      source:
        $ref: '#/definitions/model.CalendarSource'
      source_id:
        type: string
      summary:
        type: string
      synced_at:
        type: string
      time_zone:
        type: string
      updated_at:
        type: string
      user_id:
        example: "0"
        type: string
      visibility:
        $ref: '#/definitions/model.CalendarVisibility'
    type: object
  model.ErrorResponse:
    description: Error response structure
    properties:
      error:
        description: Detailed error information
        example: invalid email or password
        type: string
      message:
        description: Error message
        example: Authentication failed
        type: string
      success:
        description: Always false for error responses
        example: false
        type: boolean
    type: object
  model.GoogleCalendar:
    description: Google Calendar information
    properties:
      accessRole:
        example: owner
        type: string
      backgroundColor:
        example: '#9c27b0'
        type: string
      colorId:
        example: "1"
        type: string
      conferenceProperties:
        $ref: '#/definitions/model.GoogleCalendarConferenceProperties'
      deleted:
        example: false
        type: boolean
      description:
        example: Personal calendar
        type: string
      etag:
        example: '"00000000000000000000"'
        type: string
      foregroundColor:
        example: '#ffffff'
        type: string
      hidden:
        example: false
        type: boolean
      id:
        example: primary
        type: string
      kind:
        example: calendar#calendarListEntry
        type: string
      location:
        example: Mountain View, CA
        type: string
      primary:
        example: true
        type: boolean
      selected:
        example: true
        type: boolean
      summary:
        example: My Calendar
        type: string
      summaryOverride:
        example: Custom Summary
        type: string
      timeZone:
        example: America/Los_Angeles
        type: string
    type: object
  model.GoogleCalendarConferenceProperties:
    description: Google Calendar conference properties
    properties:
      allowedConferenceSolutionTypes:
        example:
        - '["hangoutsMeet"]'
        items:
          type: string
        type: array
    type: object
  model.LoginRequest:
    description: Login request payload
    properties:
      email:
        description: User's email address
        example: user@example.com
        type: string
      password:
        description: User's password (minimum 6 characters)
        example: password123
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  model.RegisterRequest:
    description: Registration request payload
    properties:
      display_name:
        description: User's display name (1-100 characters)
        example: John Doe
        maxLength: 100
        minLength: 1
        type: string
      email:
        description: User's email address
        example: user@example.com
        type: string
      password:
        description: Password (minimum 6 characters)
        example: password123
        minLength: 6
        type: string
      username:
        description: Username (3-50 characters)
        example: johndoe
        maxLength: 50
        minLength: 3
        type: string
    required:
    - display_name
    - email
    - password
    - username
    type: object
  model.User:
    description: User account information
    properties:
      accounts:
        description: Associated OAuth accounts
        items:
          $ref: '#/definitions/model.Account'
        type: array
      created_at:
        description: Account creation timestamp
        example: "2024-01-01T00:00:00Z"
        type: string
      display_name:
        description: User's display name
        example: John Doe
        type: string
      id:
        description: Unique user identifier
        example: "123456789"
        type: string
      password:
        description: Password hash (excluded from responses)
        type: string
      picture:
        description: Profile picture URL
        example: https://example.com/avatar.jpg
        type: string
      updated_at:
        description: Last update timestamp
        example: "2024-01-01T00:00:00Z"
        type: string
      username:
        description: Username
        example: johndoe
        type: string
    type: object
info:
  contact: {}
paths:
  /api/auth/google/callback:
    get:
      consumes:
      - application/json
      description: Handles the callback from Google OAuth, exchanges code for user
        info and creates/updates user account
      parameters:
      - description: Authorization code from Google
        in: query
        name: code
        required: true
        type: string
      - description: State parameter for CSRF protection
        in: query
        name: state
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Authentication successful with user data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - Missing state cookie, invalid state, or missing
            authorization code
        "500":
          description: Internal server error - Token exchange or user processing failed
      summary: Google OAuth Callback
      tags:
      - OAuth
  /api/auth/google/login:
    get:
      description: Redirects user to Google's OAuth consent page to begin authentication
        process
      parameters:
      - description: 'OAuth mode: login or link'
        in: query
        name: mode
        type: string
      - description: Original redirect page (for login mode)
        in: query
        name: from
        type: string
      produces:
      - text/html
      responses:
        "307":
          description: Redirect to Google OAuth consent page
        "400":
          description: Bad request - Authentication required for link mode
        "500":
          description: Internal server error
      summary: Initiate Google OAuth Login
      tags:
      - OAuth
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password, returns JWT token on
        success
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/model.AuthResponse'
        "400":
          description: Bad request - Invalid request body or missing fields
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized - Invalid credentials
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: User Login
      tags:
      - Authentication
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user account with email, username, display name,
        and password
      parameters:
      - description: Registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Registration successful
          schema:
            $ref: '#/definitions/model.AuthResponse'
        "400":
          description: Bad request - Invalid request body, missing fields, or validation
            errors
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: User Registration
      tags:
      - Authentication
  /api/calendar/events:
    get:
      description: Retrieves all events for user's calendars within a specified time
        range (max 3 months)
      parameters:
      - description: Start timestamp in Unix format
        in: query
        name: start_timestamp
        required: true
        type: string
      - description: End timestamp in Unix format
        in: query
        name: end_timestamp
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Events retrieved successfully
          schema:
            $ref: '#/definitions/model.CalendarEventsResponse'
        "400":
          description: Bad Request - Invalid query parameters or time range
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized - Authentication required
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Calendar Events
      tags:
      - Calendar
  /api/calendar/google:
    get:
      consumes:
      - application/json
      description: Retrieves all Google calendars for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: Calendars retrieved successfully
          schema:
            $ref: '#/definitions/model.CalendarListResponse'
        "401":
          description: Unauthorized - Authentication required
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found - Google token not found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get User Calendars
      tags:
      - Calendar
    post:
      consumes:
      - application/json
      description: Imports a specific Google calendar to the user's database
      parameters:
      - description: Import calendar request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/calendar.ImportCalendarRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Calendar imported successfully
          schema:
            $ref: '#/definitions/calendar.ImportCalendarResponse'
        "400":
          description: Bad Request - Invalid request body
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized - Authentication required
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found - Google token not found or calendar not found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "409":
          description: Conflict - Calendar already imported
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Import Google Calendar
      tags:
      - Calendar
swagger: "2.0"
